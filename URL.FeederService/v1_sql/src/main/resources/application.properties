# Application and Server Configuration
spring.application.name=URL.FeederService
server.port=8085

#################################################################################################################

#logging 
logging.level.root=INFO

#################################################################################################################

# JPA and Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL9Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#################################################################################################################

# Datasource Configuration
#for dockerhost
# spring.datasource.url=jdbc:mysql://172.17.0.2:3306/urlfeederservice 
#for localhost
spring.datasource.url=jdbc:mysql://127.0.0.1:3307/urlfeederservice 
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#################################################################################################################

#kafka configurations
#docker
#spring.kafka.producer.bootstrap-servers=172.17.0.1:9092
#localhost
spring.kafka.producer.bootstrap-servers =localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

################################################################################################################

#application level config

#topic mapping config
com.ritesh.demo.urlfeederservice.topics = {'text/html':'html_topic', 'image/jpeg':'image_topic', 'application/pdf':'pdf_topic'}
com.ritesh.demo.urlfeederservice.cooldown=7

com.ritesh.demo.urlfeederservice.service.cache.ttl = 1
com.ritesh.demo.urlfeederservice.service.cache.url = redis://127.0.0.1:6379/0